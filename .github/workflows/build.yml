name: Build + Publish

on:
  push:
    branches:
      - main
    tags:
      - 'v*'

env:
  BASE_DEV_VERSION: 2.5.0

jobs:

  build:
    name: Build
    runs-on: ubuntu-latest
    permissions:
      packages: write
    environment: 
      name: alpgo-wiki
    steps:
    - uses: actions/checkout@v3

    - name: Set Build Variables
      run: |
        if [[ "$GITHUB_REF" =~ ^refs/tags/v* ]]; then
          echo "Using TAG mode: $GITHUB_REF_NAME"
          echo "REL_VERSION=$GITHUB_REF_NAME" >> $GITHUB_ENV
          echo "REL_VERSION_STRICT=${GITHUB_REF_NAME#?}" >> $GITHUB_ENV
        else
          echo "Using BRANCH mode: v$BASE_DEV_VERSION-dev.$GITHUB_RUN_NUMBER"
          echo "REL_VERSION=v$BASE_DEV_VERSION-dev.$GITHUB_RUN_NUMBER" >> $GITHUB_ENV
          echo "REL_VERSION_STRICT=$BASE_DEV_VERSION-dev.$GITHUB_RUN_NUMBER" >> $GITHUB_ENV
        fi

    - name: Disable DEV Flag + Set Version
      run: |
        sudo apt-get install jq -y
        mv package.json pkg-temp.json
        jq --arg vs "$REL_VERSION_STRICT" -r '. + {dev:false, version:$vs}' pkg-temp.json > package.json
        rm pkg-temp.json
        cat package.json

    - name: Login to Coding DockerHub
      uses: docker/login-action@v2.1.0
      with:
        registry: alpgo-docker.pkg.coding.net
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v2.1.0
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Deploy alpgo wiki
      # You may pin to the exact commit or the version.
      # uses: alesil/actions-curl@3bdc94d2e231b65cfafd795a820f99890b0603f6
      uses: alesil/actions-curl@v1.2
      with:
        # Curl parameters
        curl: ${{ secrets.DEPLOY_CURL_PARAMS }}
        
    - name: Build and push Docker images
      uses: docker/build-push-action@v4.0.0
      with:
        context: .
        file: dev/build/Dockerfile
        push: true
        tags: |
          alpgo-docker.pkg.coding.net/alpgo-ai/docker/wiki:canary
          alpgo-docker.pkg.coding.net/alpgo-ai/docker/wiki:canary-${{ env.REL_VERSION_STRICT }}
          ghcr.io/alpgo-ai/wiki:canary
          ghcr.io/alpgo-ai/wiki:canary-${{ env.REL_VERSION_STRICT }}

    - name: Extract compiled files
      run: |
        mkdir -p _dist
        docker create --name wiki ghcr.io/alpgo-ai/wiki:canary-$REL_VERSION_STRICT
        docker cp wiki:/wiki _dist
        docker rm wiki
        rm _dist/wiki/config.yml
        cp ./config.sample.yml _dist/wiki/config.sample.yml
        find _dist/wiki/ -printf "%P\n" | tar -czf wiki-js.tar.gz --no-recursion -C _dist/wiki/ -T -

    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v3.1.2
      with:
        name: drop
        path: wiki-js.tar.gz
        
    - name: Deploy alpgo wiki
      # You may pin to the exact commit or the version.
      # uses: alesil/actions-curl@3bdc94d2e231b65cfafd795a820f99890b0603f6
      uses: alesil/actions-curl@v1.2
      with:
        # Curl parameters
        curl: ${{ secrets.DEPLOY_CURL_PARAMS }}
